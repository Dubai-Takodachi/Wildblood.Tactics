<MudPaper>
    <MudTreeView T="Wildblood.Tactics.Models.Tactic" Hover="true" Dense="true" ExpandOnClick="true">
        <MudTreeViewItem Icon="@Icons.Material.Outlined.Map">
            <BodyContent>
                <div style="display: grid; grid-template-columns: 1fr auto; align-items: center; width: 100%">
                    <MudText>@TacticExplorerService.CurrentTactic.Name</MudText>
                    <div style="justify-self: end;">
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" @onclick="@(async (args) => await OnClickTacticRename())" />
                        <MudIconButton Icon="@Icons.Material.Filled.AddBox" @onclick="@(async (args) => await OnAddFolder())" />
                        <MudIconButton Icon="@Icons.Material.Filled.FileDownload" @onclick="@(async (args) => await OnExportTactic())" />
                        <MudIconButton Icon="@Icons.Material.Filled.FileUpload" @onclick="@(async (args) => await OnImportTactic())" />
                    </div>
                </div>
            </BodyContent>
            <ChildContent>
                @foreach (var folder in TacticExplorerService.CurrentTactic.Folders)
                {
                    <MudTreeViewItem Icon="@Icons.Material.Filled.Folder">
                        <BodyContent>
                            <div style="display: grid; grid-template-columns: 1fr auto; align-items: center; width: 100%">
                                <MudText>@folder.Name</MudText>
                                <div style="justify-self: end;">
                                    <MudIconButton Icon="@Icons.Material.Filled.Edit" @onclick="@(async (args) => await OnClickFolderRename(folder.Id))" />
                                    <MudIconButton Icon="@Icons.Material.Filled.AddBox" @onclick="@(async (args) => await OnAddSlide(folder.Id))" />
                                </div>
                            </div>
                        </BodyContent>
                        <ChildContent>
                            @foreach (var slide in folder.Slides)
                            {
                                <MudTreeViewItem Icon="@Icons.Material.Filled.Notes" @onclick="@(async (args) => await OnSelectedSlideChange(slide, folder))">
                                    <BodyContent>
                                        <div style="display: grid; grid-template-columns: 1fr auto; align-items: center; width: 100%">
                                            <MudText>@slide.Name</MudText>
                                            <div style="justify-self: end;">
                                                <MudIconButton Icon="@Icons.Material.Filled.Edit" @onclick="@(async (args) => await OnClickSlideRename(slide.Id, folder.Id))" />
                                            </div>
                                        </div>
                                    </BodyContent>
                                </MudTreeViewItem>
                            }
                        </ChildContent>
                    </MudTreeViewItem>
                }
            </ChildContent>
        </MudTreeViewItem>
    </MudTreeView>
</MudPaper>
