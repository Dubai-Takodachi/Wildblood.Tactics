@page "/UnitSetup"
@using System.Security.Claims
@using Microsoft.EntityFrameworkCore
@using Wildblood.Tactics.Data
@using Wildblood.Tactics.Entities
@using Wildblood.Tactics.Mappings
@using Wildblood.Tactics.Models
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ApplicationDbContext DbContext
@rendermode InteractiveServer

<MudContainer>
    <MudPaper>
        <MudDataGrid T="PlayerSetup" ReadOnly="false" Items="@players" EditMode="DataGridEditMode.Cell">
            <Columns>
                <PropertyColumn Property="x => x.Number" Title="Nr." Editable="true" />
                <PropertyColumn Property="x => x.Name" Title="Name" Editable="true" />
                <PropertyColumn Property="x => x.Class" Title="Class" Editable="true" >
                    <EditTemplate>
                        <MudSelect T="Classes" @bind-Value="context.Item.Class">
                            <MudSelectItem Value="Models.Classes.Longbow">Longbow</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.Shortbow">Short Bow</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.Dualblades">Dual Blades</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.Scimitar">Scimitar</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.Spear">Spear</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.Pike">Pike</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.Nodachi">Nodachi</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.Musket">Musket</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.SpearAndShield">Spear and Shield</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.Maul">Maul</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.LongSword">Long Sword</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.Glaive">Glaive</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.ShortSword">Short Sword</MudSelectItem>
                            <MudSelectItem Value="Models.Classes.Poleaxe">Poleaxe</MudSelectItem>
                        </MudSelect>
                    </EditTemplate>
                </PropertyColumn>
                <PropertyColumn Property="x => x.Influence" Title="Influence" Editable="true" />
                <TemplateColumn Title="First Unit">
                    <EditTemplate>
                        <MudPaper>
                            <MudButton Variant="Variant.Filled" OnClick="OnButtonChangeClick">
                                <MudText>@context.Item.Units[0].Name</MudText>
                                <img src="ConquerorsBladeData/Units/@context.Item.Units[0].Path" />
                            </MudButton>
                        </MudPaper>
                    </EditTemplate>
                </TemplateColumn>
                <TemplateColumn Title="Second Unit">
                    <EditTemplate>
                        <MudPaper>
                            <MudText>@context.Item.Units[1].Name</MudText>
                            <img src="ConquerorsBladeData/Units/@context.Item.Units[1].Path" />
                        </MudPaper>
                    </EditTemplate>
                </TemplateColumn>
                <TemplateColumn Title="Third Unit">
                    <EditTemplate>
                        <MudPaper>
                            <MudText>@context.Item.Units[2].Name</MudText>
                            <img src="ConquerorsBladeData/Units/@context.Item.Units[2].Path" />
                        </MudPaper>
                    </EditTemplate>
                </TemplateColumn>
                <TemplateColumn >
                    <EditTemplate>
                        <MudStack>
                            <MudText>@context.Item.Units[3].Name</MudText>
                            <img src="ConquerorsBladeData/Units/@context.Item.Units[3].Path" />
                        </MudStack>
                    </EditTemplate>
                </TemplateColumn>
            </Columns>
        </MudDataGrid>
        <MudButton ButtonType="ButtonType.Button" Variant=" Variant.Outlined" Color="@Color.Success" OnClick="OnAddButtonClick" />
    </MudPaper>
</MudContainer>



@code {

    private List<PlayerSetup> players = new List<PlayerSetup>();

    private string currentUserId = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        currentUserId = authState.User.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? string.Empty;

        // Load only the current user's player setups
        if (!string.IsNullOrEmpty(currentUserId))
        {
            players = await DbContext.PlayerSetups
                .Where(p => p.UserId == currentUserId)
                .ToListAsync();
        }
    }

    async Task OnAddButtonClick()
    {
        players.Add(new PlayerSetup
        {
            Number = players.Count + 1,
            Name = "New Player",
            Class = Models.Classes.Maul,
            Influence = 700,
            Units = new List<Unit>
            {
                UnitDataSet.Entries.First(unit => unit.Name == UnitName.Alchemists),
                UnitDataSet.Entries.First(unit => unit.Name == UnitName.ArcherMilitia),
                UnitDataSet.Entries.First(unit => unit.Name == UnitName.ArmingerLancers),
                UnitDataSet.Entries.First(unit => unit.Name == UnitName.AxeRaiders),
            },
            UserId = currentUserId

        });

        DbContext.PlayerSetups.Add(players.Last());
        await DbContext.SaveChangesAsync();
    }

    async Task OnButtonChangeClick()
    {
        
    }
}
